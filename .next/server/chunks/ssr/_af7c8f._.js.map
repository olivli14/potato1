{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/app/abi.ts"],"sourcesContent":["export const potatoABI = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_potato\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_sourcream\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_cheese\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_bacon\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_chives\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addIngredient\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_potato\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_sourcream\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_cheese\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_bacon\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_chives\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"buyPotato\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getIngredients\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n]"],"names":[],"mappings":";;;AAAO,MAAM,YAAY;IACrB;QACE,UAAU;YACR;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;SACD;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACV;IACA;QACE,UAAU;YACR;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;YACA;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;SACD;QACD,QAAQ;QACR,WAAW,EAAE;QACb,mBAAmB;QACnB,QAAQ;IACV;IACA;QACE,UAAU,EAAE;QACZ,QAAQ;QACR,WAAW;YACT;gBACE,gBAAgB;gBAChB,QAAQ;gBACR,QAAQ;YACV;SACD;QACD,mBAAmB;QACnB,QAAQ;IACV;CACH"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,0BAAY,sMAAM,UAAU,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,sKAAmB,IAAI;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,sKAAmB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/components/potato-card.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\n\nimport { getContract, createWalletClient, custom } from \"viem\";\nimport { sepolia } from \"viem/chains\";\nimport { potatoABI } from \"@/app/abi\";\nimport { useState } from \"react\";\nimport { useAccount, useWriteContract } from \"wagmi\";\nimport { ConnectButton, useAddRecentTransaction } from \"@rainbow-me/rainbowkit\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport { Separator } from \"./ui/separator\";\nimport {} from \"wagmi\";\nimport { wagmiConfig } from \"./wallet-providers\";\nimport { readContract } from \"@wagmi/core\";\nimport Link from \"next/link\";\n\nconst CONTRACT_ADDRESS = \"0x6a750EbcD76de10dd9da6364BE6Cc155eD44Cb6B\";\n\nexport function PotatoCard() {\n    \n    const { isConnected } = useAccount(); \n    const { data: hash, writeContract } = useWriteContract();\n    const addRecentTransaction = useAddRecentTransaction();\n\n    const [potato, setPotato] = useState(0);\n    const [sourcream, setSourcream] = useState(0);\n    const [cheese, setCheese] = useState(0);\n    const [bacon, setBacon] = useState(0);\n    const [chives, setChives] = useState(0);\n\n    async function readPotato(){\n        try {\n            const ingredients = await readContract(wagmiConfig, {\n                address: CONTRACT_ADDRESS,\n                abi: potatoABI,\n                functionName: 'getIngredients',\n            }) as number[];\n            setPotato(ingredients[0]);\n            setSourcream(ingredients[1]);\n            setCheese(ingredients[2]);\n            setBacon(ingredients[3]);\n            setChives(ingredients[4]);\n        } catch (error) {\n            console.error(\"Error reading ingredients:\", error);\n        }\n    };\n\n    async function buyPotato(potatoAmount: number, sourcreamAmount: number, cheeseAmount: number, baconAmount: number, chivesAmount: number) {\n        await readPotato();\n        writeContract({\n            address: CONTRACT_ADDRESS,\n            abi: potatoABI,\n            functionName: \"buyPotato\",\n            args: [potatoAmount, sourcreamAmount, cheeseAmount, baconAmount, chivesAmount],\n        });\n            // Add transaction to recent transactions\n        if (hash) {\n            console.log(\"hash: \", hash);\n            addRecentTransaction({\n                hash: hash,\n                description: \"Buy a potato\",                    confirmations: 2,\n            });\n        }\n        \n    };\n\n\n    async function addIngredients(potatoAmount: number, sourcreamAmount: number, cheeseAmount: number, baconAmount: number, chivesAmount: number) {\n        await readPotato();\n        \n        writeContract({\n            address: CONTRACT_ADDRESS,\n            abi: potatoABI,\n            functionName: \"addIngredient\",\n            args: [potatoAmount, sourcreamAmount, cheeseAmount, baconAmount, chivesAmount],\n        });\n        console.log(\"Ingredients added successfully\");\n    }\n\n    async function submitPotatos(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const formData = new FormData(event.target as HTMLFormElement);\n        const num = formData.get(\"num\") as string;\n        console.log(\"num: \", num);\n        const numPotatos = parseInt(num);\n        addIngredients(numPotatos, 0, 0, 0, 0);\n    }\n\n    async function submitSourcream(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const formData = new FormData(event.target as HTMLFormElement);\n        const num = formData.get(\"num\") as string;\n        console.log(\"num: \", num);\n        const numSourcream = parseInt(num);\n        addIngredients(0, numSourcream, 0, 0, 0);\n    }\n\n\n    async function submitCheese(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const formData = new FormData(event.target as HTMLFormElement);\n        const num = formData.get(\"num\") as string;\n        console.log(\"num: \", num);\n        const numCheese = parseInt(num);\n        addIngredients(0, 0, numCheese, 0, 0);\n    }\n\n    \n    async function submitBacon(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const formData = new FormData(event.target as HTMLFormElement);\n        const num = formData.get(\"num\") as string;\n        console.log(\"num: \", num);\n        const numBacon = parseInt(num);\n        addIngredients(0, 0, 0, numBacon, 0);\n    }\n    async function submitChives(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const formData = new FormData(event.target as HTMLFormElement);\n        const num = formData.get(\"num\") as string;\n        console.log(\"num: \", num);\n        const numChives = parseInt(num);\n        addIngredients(0, 0, 0, 0, numChives);\n    }\n\n    async function submitBuyPotato(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const formData = new FormData(event.target as HTMLFormElement);\n        const potatoAmount = parseInt(formData.get(\"potato\") as string);\n        const sourcreamAmount = parseInt(formData.get(\"sourcream\") as string);\n        const cheeseAmount = parseInt(formData.get(\"cheese\") as string);\n        const baconAmount = parseInt(formData.get(\"bacon\") as string);\n        const chivesAmount = parseInt(formData.get(\"chives\") as string);\n        buyPotato(potatoAmount, sourcreamAmount, cheeseAmount, baconAmount, chivesAmount);\n    }\n\n    if (isConnected) {\n        return (\n          <Card className=\"m-2\">\n            <CardHeader>\n              <CardTitle>Baked Potato Shop</CardTitle>\n              <CardDescription>\n                Total supply: \n                <br />\n                Potatoes: {potato.toString()}\n                <br />\n                Sour Cream: {sourcream.toString()}\n                <br />\n                Cheese: {cheese.toString()}\n                <br />\n                Bacon: {bacon.toString()}\n                <br />\n                Chives: {chives.toString()}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Button onClick={readPotato}>Read Potato Contract</Button>\n              <Separator className=\"my-3\" />\n\n              {/* Form to add Potatoes */}\n              <form onSubmit={submitPotatos}>\n                <Input name=\"num\" type=\"number\" placeholder=\"Add Potatoes\" required />\n                <Button type=\"submit\">Add Potatoes</Button>\n              </form>\n\n              {/* Form to add Sour Cream */}\n              <form onSubmit={submitSourcream}>\n                <Input name=\"num\" type=\"number\" placeholder=\"Add Sour Cream\" required />\n                <Button type=\"submit\">Add Sour Cream</Button>\n              </form>\n\n              {/* Form to add Cheese */}\n              <form onSubmit={submitCheese}>\n                <Input name=\"num\" type=\"number\" placeholder=\"Add Cheese\" required />\n                <Button type=\"submit\">Add Cheese</Button>\n              </form>\n\n              {/* Form to add Bacon */}\n              <form onSubmit={submitBacon}>\n                <Input name=\"num\" type=\"number\" placeholder=\"Add Bacon\" required />\n                <Button type=\"submit\">Add Bacon</Button>\n              </form>\n\n              {/* Form to add Chives */}\n              <form onSubmit={submitChives}>\n                <Input name=\"num\" type=\"number\" placeholder=\"Add Chives\" required />\n                <Button type=\"submit\">Add Chives</Button>\n              </form>\n\n              <Separator className=\"my-3\" />\n\n              {/* New Card for Buying Potatoes */}\n              <Card className=\"m-2\">\n                <CardHeader>\n                  <CardTitle>Buy Potato</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <form onSubmit={submitBuyPotato}>\n                    <Input name=\"potato\" type=\"number\" placeholder=\"Number of Potatoes\" required />\n                    <Input name=\"sourcream\" type=\"number\" placeholder=\"Number of Sour Creams\" required />\n                    <Input name=\"cheese\" type=\"number\" placeholder=\"Number of Cheeses\" required />\n                    <Input name=\"bacon\" type=\"number\" placeholder=\"Number of Bacons\" required />\n                    <Input name=\"chives\" type=\"number\" placeholder=\"Number of Chives\" required />\n                    <Button type=\"submit\">Buy Potato</Button>\n                  </form>\n                </CardContent>\n              </Card>\n            </CardContent>\n            <CardFooter>\n              <p>\n                Transaction hash{\" \"}\n                <Link href={`https://sepolia.etherscan.io/tx/${hash}`}>{hash}</Link>\n              </p>\n            </CardFooter>\n          </Card>\n        );\n      } else {\n        return (\n          <Card className=\"m-2\">\n            <CardHeader>\n              <CardTitle>Please connect your wallet</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p>Card Content</p>\n            </CardContent>\n          </Card>\n        );\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/components/nav-bar.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { ConnectButton } from '@rainbow-me/rainbowkit';\n\nconst NavigationHeader: React.FC = () => {\n  \n  return (\n    <header className=\"w-full bg-background border-b border-border\">\n      <nav className=\"container mx-auto px-4 py-4 flex justify-between items-center\">\n        <Link href=\"/\" className=\"text-xl font-bold\">\n        Potato\n        </Link>\n        <ul className=\"flex space-x-4 items-center\">\n            <li>\n                <ConnectButton />\n            </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavigationHeader;"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMA,MAAM,mBAA6B;IAEjC,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4HAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BAAoB;;;;;;8BAG7C,8OAAC;oBAAG,WAAU;8BACV,cAAA,8OAAC;kCACG,cAAA,8OAAC,8KAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;AAM9B;uCAEe"}},
    {"offset": {"line": 915, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 921, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliviali/Documents/GitHub/potato1/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { PotatoCard } from '@/components/potato-card';\nimport NavigationHeader from '@/components/nav-bar';\n\nexport default function Home() {\n  \n  return (\n    <div>\n      <div>\n        <NavigationHeader/>\n        <div>\n          <PotatoCard />\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IAEtB,qBACE,8OAAC;kBACC,cAAA,8OAAC;;8BACC,8OAAC,yHAAA,CAAA,UAAgB;;;;;8BACjB,8OAAC;8BACC,cAAA,8OAAC,6HAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;AAKrB"}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}